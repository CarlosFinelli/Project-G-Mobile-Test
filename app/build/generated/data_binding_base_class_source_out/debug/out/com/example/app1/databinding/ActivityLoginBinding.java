// Generated by view binder compiler. Do not edit!
package com.example.app1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.app1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button Entrar;

  @NonNull
  public final EditText Gmail;

  @NonNull
  public final EditText Password;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final TextView rec;

  private ActivityLoginBinding(@NonNull NestedScrollView rootView, @NonNull Button Entrar,
      @NonNull EditText Gmail, @NonNull EditText Password, @NonNull ImageView logo,
      @NonNull TextView rec) {
    this.rootView = rootView;
    this.Entrar = Entrar;
    this.Gmail = Gmail;
    this.Password = Password;
    this.logo = logo;
    this.rec = rec;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Entrar;
      Button Entrar = ViewBindings.findChildViewById(rootView, id);
      if (Entrar == null) {
        break missingId;
      }

      id = R.id.Gmail;
      EditText Gmail = ViewBindings.findChildViewById(rootView, id);
      if (Gmail == null) {
        break missingId;
      }

      id = R.id.Password;
      EditText Password = ViewBindings.findChildViewById(rootView, id);
      if (Password == null) {
        break missingId;
      }

      id = R.id.logo;
      ImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.rec;
      TextView rec = ViewBindings.findChildViewById(rootView, id);
      if (rec == null) {
        break missingId;
      }

      return new ActivityLoginBinding((NestedScrollView) rootView, Entrar, Gmail, Password, logo,
          rec);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
